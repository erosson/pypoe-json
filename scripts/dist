#!/bin/bash
# set -x
set -euo pipefail
cd "`dirname "$0"`/.."
mkdir -p dist/dat dist/lang

node scripts/passive-skill-tree.js

ASSETS_EXE_PATH="./assets/exe/depot"
[ ! -f ./third-party/strings/strings.exe ] && unzip third-party/Strings.zip -d third-party/strings
./third-party/strings/strings.exe -accepteula 2>/dev/null || true
POE_VERSION="`./third-party/strings/strings.exe "$ASSETS_EXE_PATH/PathOfExileSteam.exe" | grep release/tags/ | sed -e "s_release/tags/__"`"
if [ -z $POE_VERSION ]; then
  echo "Failed to find poe version"
  exit 1
fi
echo "${POE_VERSION}" | tee dist/version.txt
echo "{\"version\":\"${POE_VERSION}\"}" > dist/version.json

# ASSETS_PATH="/c/Program Files (x86)/Grinding Gear Games/Path of Exile"
ASSETS_PATH="`pwd`/assets/content/depot"
pypoe_exporter config set ggpk_path "$ASSETS_PATH"

# Build a list of dat files
python third-party/PyPoE/PyPoE/index_dat.py > dist/list.json

echo "building dist/all.json..."
pypoe_exporter dat json dist/all.json 2>/dev/null

# Split all.json into a file per dat file
echo "building dist/dat/..."
node scripts/dist-dat.js dist/all.json dist/dat

# Multi-language support
cp scripts/lang.json dist/lang.json
for lang in `node --eval="require('./dist/lang.json').forEach(l => console.log(l))"`; do
  echo "building dist/all-$lang.json..."
  pypoe_exporter dat json dist/all-$lang.json --lang $lang 2>/dev/null

  echo "building dist/lang/$lang/..."
  node scripts/dist-dat.js dist/all-$lang.json dist/lang/$lang
  # keep only the language files that differ from english
  for f in `ls ./dist/lang/$lang`; do
    diff --brief --ignore-trailing-space "./dist/dat/$f" "./dist/lang/$lang/$f" >/dev/null && rm "./dist/lang/$lang/$f" || true
  done
  # diff --ignore-trailing-space "./dist/dat" "./dist/lang/$lang" > "dist/$lang.patch" || true
done

# Finally, build the file index
node scripts/dist-index.js
